<!DOCTYPE web-app PUBLIC
 "-//Sun Microsystems, Inc.//DTD Web Application 2.3//EN"
 "http://java.sun.com/dtd/web-app_2_3.dtd" >

<web-app>
  <display-name>Kafka Router App</display-name>
  
  <!-- location of Camel route xml files -->
  <context-param>
    <param-name>routeBuilder-KafkaConsumer</param-name>
    <!-- define the routes as a resource from the classpath by prefixing the value with classpath: -->
    <!-- <param-value>classpath:camel-config.xml</param-value> -->
    <!-- note: instead of using a XML file we can also define the routes in Java code in a RouteBuilder class -->
    <!-- <param-value>com.walmartlabs.sca.kafka.router.route.MyRoute</param-value> -->
    <param-value>com.walmartlabs.sca.kafka.router.route.KafkaConsumer</param-value>
  </context-param>
  
  <context-param>
    <!-- define a lifecycle which could help user to setup the registry which could be use as a reference in camel route -->
    <!-- If you use org.apache.camel.component.servletlistener.JndiCamelServletContextListener then the CamelContextLifecycle
     must use the JndiRegistry as well. And likewise if the servlet is org.apache.camel.component.servletlistener.SimpleCamelServletContextListener 
     then the CamelContextLifecycle must use the SimpleRegistry -->
    <param-name>CamelContextLifecycle</param-name>
    <param-value>com.walmartlabs.sca.kafka.router.RouterLifecycle</param-value>
  </context-param>

  <!-- the listener that kick-starts Camel -->
  <listener>
    <listener-class>org.apache.camel.component.servletlistener.JndiCamelServletContextListener</listener-class>
  </listener>

  <!-- Camel servlet used in the Camel application -->
  <servlet>
    <servlet-name>CamelServlet</servlet-name>
    <servlet-class>org.apache.camel.component.servlet.CamelHttpTransportServlet</servlet-class>
    <load-on-startup>1</load-on-startup>
  </servlet>

  <!-- Camel servlet mapping -->
  <servlet-mapping>
    <servlet-name>CamelServlet</servlet-name>
    <url-pattern>/camel/*</url-pattern>
  </servlet-mapping>
</web-app>
